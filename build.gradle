plugins {
    id 'base'
}

ext {
    guava_version = '32.1.3-jre'
    slf4j_version = '2.0.9'
    jackson_version = '2.15.3'
    spring_version = '6.0.13'

    lib = [
            icu4j                 : 'com.ibm.icu:icu4j:73.2',
            guava                 : "com.google.guava:guava:${guava_version}",
            commons_lang          : 'org.apache.commons:commons-lang3:3.13.0',
            servlet_api           : 'jakarta.servlet:jakarta.servlet-api:6.0.0',
            joda_time             : 'joda-time:joda-time:2.12.5',
            junit                 : 'junit:junit:4.13.2',
            slf4j                 : "org.slf4j:slf4j-api:${slf4j_version}",
            jackson               : ["com.fasterxml.jackson.core:jackson-core:${jackson_version}", "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"],
            mockito               : 'org.mockito:mockito-core:5.5.0',
            jsonpath              : 'com.jayway.jsonpath:json-path:2.8.0',
            spring_core           : "org.springframework:spring-core:${spring_version}",
            spring_webmvc         : "org.springframework:spring-webmvc:${spring_version}",
            spring_web            : "org.springframework:spring-web:${spring_version}",
            spring_test           : "org.springframework:spring-test:${spring_version}",
            groovy                : 'org.codehaus.groovy:groovy:3.0.19',
    ]
}

group = 'be.dnsbelgium'

subprojects {
    tasks.withType(Test).configureEach {
        //forkEvery = 5
        //maxParallelForks = Runtime.runtime.availableProcessors() - 1
        systemProperties 'file.encoding': 'UTF-8'
        testLogging {
            //exceptionFormat "full"
            //events 'started', 'passed', 'skipped', 'failed'
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        //options.compilerArgs << "-Xlint:all"
    }

    tasks.withType(Javadoc).configureEach {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    pluginManager.withPlugin('java') {
        java {
            withJavadocJar()
            withSourcesJar()
        }
    }
}
